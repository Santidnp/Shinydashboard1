hist(nnd_regular)
G_regular <- Gest(p_regular)
plot(G_regular) ##Probabilidad muy baja de encontrar vecinos
sys.date()
library(sp)
#################################################################################################
spatstat.data::
data(bigfoot)
library(sp)
data(bigfoot)
install.packages("sp")
install.packages("sp")
#################################################################################################
spatstat.data::
library(sp)
data(bigfoot)
library(datasets)
data(bigfoot)
datasets
data(bigfoot)
plot(p_cluster)
p_regular <- rStrauss(beta = 2.9, gamma = 0.025, R = .5, W = disc10)
plot(p_regular)
p_poisson <- ppois
# Calc nearest-neighbor distances for Poisson point data
nnd_poisson <- nndist(p_poisson)
library(spatstat)
# Calc nearest-neighbor distances for Poisson point data
nnd_poisson <- nndist(p_poisson)
# Draw a histogram of nearest-neighbor distances
hist(nnd_poisson)
G_poisson <- Gest(p_poisson)
# Plot G(r) vs. r
plot(G_poisson)
nnd_regular <- nndist(p_regular)
hist(nnd_regular)
G_regular <- Gest(p_regular)
plot(G_regular) ##Probabilidad muy baja de encontrar vecinos
plot(p_regular)
# Run a quadrat test
quadrat.test(p_regular, alternative = "regular")
# Estimate the K-function for the Poisson points
K_poisson <- Kest(p_poisson, correction = "border")
# The default plot shows quadratic growth
plot(K_poisson, . ~ r)
nnd_cluster <- nndist(p_cluster)
hist(nnd_cluster)
G_cluster <- Gest(p_cluster)
plot(G_cluster)
plot(G_regular) ##Probabilidad muy baja de encontrar vecinos
plot(G_cluster)
G_poisson <- Gest(p_poisson)
# Plot G(r) vs. r
plot(G_poisson)
G_cluster <- Gest(p_cluster)
plot(G_cluster)
nnd_regular <- nndist(p_regular)
G_regular <- Gest(p_regular)
G_regular <- Gest(p_regular)
plot(G_regular) ##Probabilidad muy baja de encontrar vecinos
library(spatstat)
library(sp)
DIVIPOLA_XY <- read_excel("C:/Users/sngh9/OneDrive/Escritorio/Espacio temporal/DIVIPOLA_CPOB_MAR2017_XY.xls")
radius <- 300
pp <- ppp(x=DIVIPOLA_XY$LAT_Y,y=DIVIPOLA_XY$LONG_X,window = disc(radius))
plot(pp)
ppp()
summary(pp)
DIVIPOLA_XY <- read_excel("C:/Users/sngh9/OneDrive/Escritorio/Espacio temporal/DIVIPOLA_CPOB_MAR2017_XY.xls")
library(readxl)
DIVIPOLA_XY <- read_excel("C:/Users/sngh9/OneDrive/Escritorio/Espacio temporal/DIVIPOLA_CPOB_MAR2017_XY.xls")
radius <- 300
pp <- ppp(x=DIVIPOLA_XY$LAT_Y,y=DIVIPOLA_XY$LONG_X,window = disc(radius))
plot(pp)
radius <- 30
pp <- ppp(x=DIVIPOLA_XY$LAT_Y,y=DIVIPOLA_XY$LONG_X,window = disc(radius))
plot(pp)
??owin object
load(url("http://github.com/mgimond/Spatial/raw/master/Data/ppa.RData"))
View(starbucks)
rm(list = ls())
# Poker and roulette winnings from Monday to Friday:
poker_vector <- c(140, -50, 20, -120, 240)
roulette_vector <- c(-24, -50, 100, -350, 10)
days_vector <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
names(poker_vector) <- days_vector
names(roulette_vector) <- days_vector
# Which days did you make money on roulette?
selection_vector <- roulette_vector > 0
# Select from roulette_vector these days
roulette_winning_days <- roulette_vector[selection_vector]
roulette_winning_days
#Matrices
matrix(1:9, byrow = TRUE, nrow = 3)
library(shiny); runApp('C:/Users/sngh9/OneDrive/Escritorio/ejercicios R/Shiny/Shinydashboardtutorial.R')
install.packages("shiny")
speed_vector <- c("medium","slow","slow","medium","fast")
levels(speed_vector)
factor_speed_vector <- factor(
speed_vector,
ordered = TRUE,
levels = c("slow","medium","fast")
)
###Data frames
mtcars
str(mtcars)
dd <- c()
pares <- function(a){
pares_v <- NULL
for(i in length(a)){
if(a[i]%2==){
pares_v <- c(pares_v,a[i])
}
}
}
pares <- function(a){
pares_v <- c()
for(i in length(a)){
if(a[i]%2==){
pares_v <- c(pares_v,a[i])
}
}
}
pares <- function(a){
pares_v <- c()
for(i in length(a)){
if(a[i]%2==){
pares_v <- c(pares_v,a[i])
}
}
print(pares_v)
}
pares_v <- c()
a <- c(1,2)
pares_v <- c(pares_v,a[1])
pares_v
pares_v <- c(pares_v,a[2])
pares_v
pares <- function(a){
pares_v <- c()
for(i in length(a)){
if(a[i]%2==){
pares_v <- c(pares_v,a[i])
}
}
print(pares_v)
}
pares <- function(a){
pares_v <- c()
for(i in length(a)){
if(a[i]%2==){
pares_v <- c(pares_v,a[i])
}
}
print(pares_v)
}
length(a)
pares <- function(a){
pares_v <- c()
for(i in length(a)){
if(a[i]%2==){
pares_v <- c(pares_v,a[i])
}
}
print(pares_v)
}
pares <- function(a){
pares_v <- c()
for(i in length(a)){
if(a[i]%2==){
pares_v <- c(pares_v,a[i])
}
}
print(pares_v)
}
pares <- function(a){
pares_v <- c()
for(i in length(a)){
if(a[i]%2==){
pares_v <- c(pares_v,a[i])
}
}
print(pares_v)
}
pares <- function(a){
pares_v <- c()
for(i in length(a)){
if(a[i]%2==){
pares_v <- c(pares_v,a[i])
}
}
print(pares_v)
}
for(i in 1:length(a)){
if(a[i]%2==){
pares_v <- c(pares_v,a[i])
}
for(i in 1:length(a)){
if(a[i]%2==){
pares_v <- c(pares_v,a[i])
}
}
for(i in 1:length(a)){
if(a[i]%2==){
pares_v <- c(pares_v,a[i])
}
}
if(a[i]%2==){
pares_v <- c(pares_v,a[i])
}
if(a[1]%2==){
pares_v <- c(pares_v,a[1])
}
pares <- function(a){
pares_v <- c()
for(i in 1:length(a)){
if(a[i]%2==0){
pares_v <- c(pares_v,a[i])
}
}
print(pares_v)
}
if(a[1]%2==0){
pares_v <- c(pares_v,a[1])
}
a[1]
a[1]%2
a[1]%%2
if(a[1]%%2==0){
pares_v <- c(pares_v,a[1])
}
pares <- function(a){
pares_v <- c()
for(i in 1:length(a)){
if(a[i]%%2==0){
pares_v <- c(pares_v,a[i])
}
}
print(pares_v)
}
pares_v(c(1,3,45,44,32,12,45))
pares(c(1,3,45,44,32,12,45))
pares(c(1,3,45,44,32,12,45))
pares(0)
pares(c(23,44,12,5))
order(pares(c(1,3,45,44,32,12,45)))
seyy <- order(pares(c(1,3,45,44,32,12,45)))
seyy <- [order(pares(c(1,3,45,44,32,12,45)))]
seyy <- [order(pares(c(1,3,45,44,32,12,45)))]
182-75
106+75
library(shiny); runApp('C:/Users/sngh9/OneDrive/Escritorio/ejercicios R/Shiny/Shinydashboardtutorial.R')
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
library(shiny); runApp('Shinydashboardtutorial.R')
install.packages("shiny")
runApp('Shinydashboardtutorial.R')
install.packages("shiny")
install.packages("shinydashboard")
runApp('Shinydashboardtutorial.R')
install.packages("shinydashboard")
install.packages("shiny")
install.packages("shinydashboard")
install.packages("shiny")
install.packages("shinydashboard")
runApp('Shinydashboardtutorial_starwars.R')
install.packages("shiny")
install.packages("shinydashboard")
runApp('Shinydashboardtutorial_starwars.R')
install.packages("shiny")
install.packages("shiny")
library(shiny); runApp('Shinydashboardtutorial_starwars.R')
install.packages("shiny")
runApp('Shinydashboardtutorial_starwars.R')
install.packages("shiny")
install.packages("shinydashboard")
runApp('Shinydashboardtutorial_starwars.R')
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
library(shiny); runApp('Shinydashboardtutorial_starwars.R')
install.packages("shiny")
server <- function(input, output, session) {
output$name <- renderText({
input$name
})
reactive_starwars_data <- reactiveFileReader(
intervalMillis = 1000,
session = session,
filePath = "starwars.csv",
readFunc = function(filePath){
read_delim(paste0("C:/Users/sngh9/OneDrive/Escritorio/ejercicios R/Shiny/",filePath),";", escape_double = FALSE, trim_ws = TRUE)
}
)
output$table(
{reactive_starwars_data()
})
}
View(server)
runApp('Shinydashboardtutorial_starwars.R')
install.packages("shiny")
install.packages("shinydashboard")
runApp('Shinydashboardtutorial_starwars.R')
install.packages("shiny")
install.packages("shinydashboard")
runApp('Shinydashboardtutorial_starwars.R')
runApp('Shinydashboardtutorial_starwars.R')
install.packages("shinydashboard")
install.packages("shiny")
install.packages("shinydashboard")
install.packages("shinydashboard")
runApp('Shinydashboardtutorial_starwars.R')
install.packages("shiny")
install.packages("shinydashboard")
runApp('Shinydashboardtutorial_starwars.R')
runApp('Shinydashboardtutorial_starwars.R')
install.packages("shiny")
install.packages("shinydashboard")
shinyApp(ui, server)
body <- dashboardBody(
tableOutput("table")
)
ui <- dashboardPage(header = dashboardHeader(),
sidebar = dashboardSidebar(),
body = body
)
server <- function(input, output, session) {
output$name <- renderText({
input$name
})
reactive_starwars_data <- reactiveFileReader(
intervalMillis = 1000,
session = session,
filePath = "starwars.csv",
readFunc = function(filePath){
read.csv(paste0("C:/Users/sngh9/OneDrive/Escritorio/ejercicios R/Shiny/",filePath))
}
)
output$table(
{reactive_starwars_data()
})
}
shinyApp(ui, server)
shinyApp(ui, server)
output$table(
{reactive_starwars_data()
})
reactive_starwars_data <- reactiveFileReader(
intervalMillis = 1000,
session = session,
filePath = "starwars.csv",
readFunc = function(filePath){
read.csv(paste0("C:/Users/sngh9/OneDrive/Escritorio/ejercicios R/Shiny/",filePath))
}
)
reactive_starwars_data <- reactiveFileReader(
intervalMillis = 1000,
session = session,
filePath = "starwars.csv",
readFunc = function(filePath){
read.csv(paste0("C:/Users/sngh9/OneDrive/Escritorio/ejercicios R/Shiny/",filePath))
}
)
shinyApp(ui, server)
1
runApp('Shinydashboardtutorial_starwars.R')
install.packages("shiny")
install.packages("shinydashboard")
runApp('Shinydashboardtutorial_starwars.R')
install.packages("shinydashboard")
install.packages("shiny")
install.packages("shinydashboard")
rm(list = ls())
reactive_starwars_data <- reactiveFileReader(
intervalMillis = 1000,
session = session,
filePath = "starwars.csv",
readFunc = function(filePath){
read.csv(paste0("C:/Users/sngh9/OneDrive/Escritorio/ejercicios R/Shiny/",filePath),delim = ";")
}
)
reactive_starwars_data <- reactiveFileReader(
intervalMillis = 1000,
session = session,
filePath = "starwars.csv",
readFunc = function(filePath){
read.csv(paste0("C:/Users/sngh9/OneDrive/Escritorio/ejercicios R/Shiny/",filePath),delim = ";")
}
)
filePath = "starwars.csv"
read.csv(paste0("C:/Users/sngh9/OneDrive/Escritorio/ejercicios R/Shiny/",filePath),delim = ";")
read.csv(paste0("C:/Users/sngh9/OneDrive/Escritorio/ejercicios R/Shiny/",filePath),sep = ";")
runApp('Shinydashboardtutorial_starwars.R')
install.packages("shiny")
install.packages("shinydashboard")
body <- dashboardBody(
tableOutput("table")
)
runApp('Shinydashboardtutorial_starwars.R')
install.packages("shinydashboard")
install.packages("shiny")
install.packages("shinydashboard")
runApp('Shinydashboardtutorial_starwars.R')
install.packages("shinydashboard")
install.packages("shiny")
install.packages("shinydashboard")
runApp('Shinydashboardtutorial_starwars.R')
install.packages("shiny")
install.packages("shinydashboard")
read.csv(filePath,sep = ";")
runApp('Shinydashboardtutorial_starwars.R')
runApp('Shinydashboardtutorial_starwars.R')
install.packages("shiny")
install.packages("shinydashboard")
install.packages("shinydashboard")
server <- function(input, output, session) {
reactive_starwars_data <- reactiveFileReader(
intervalMillis = 1000,
session = session,
filePath = "starwars.csv",
readFunc = function(filePath){
read.csv(filePath,sep = ";")
}
)
output$table(
{reactive_starwars_data()
})
}
shinyApp(ui, server)
body <- dashboardBody(
tableOutput("table")
)
ui <- dashboardPage(header = dashboardHeader(),
sidebar = dashboardSidebar(),
body = body
)
shinyApp(ui, server)
runApp('C:/Users/sngh9/OneDrive/Escritorio/ejercicios R/pruebas1.R')
runApp('C:/Users/sngh9/OneDrive/Escritorio/ejercicios R/pruebas1.R')
runApp('Shinydashboardtutorial.R')
install.packages("shiny")
install.packages("shinydashboard")
task_data
runApp('Shinydashboardtutorial.R')
install.packages("shiny")
install.packages("shinydashboard")
runApp('Shinydashboardtutorial.R')
install.packages("shiny")
install.packages("shinydashboard")
install.packages("shinydashboard")
runApp('Shinydashboardtutorial.R')
install.packages("shiny")
install.packages("shinydashboard")
runApp('Shinydashboardtutorial.R')
install.packages("shiny")
install.packages("shinydashboard")
install.packages("shinydashboard")
shinyApp(ui, server)
body <- dashboardBody(
fluidrow(
box(
width = 12,
title = "Regular Box, Row 1",
"Star Wars"
)
,
box(
width = 12,
title = "Regular Box, Row 2",
"Nothing but Star Wars"
)
)
)
library("shiny")
body <- dashboardBody(
fluidrow(
box(
width = 12,
title = "Regular Box, Row 1",
"Star Wars"
)
,
box(
width = 12,
title = "Regular Box, Row 2",
"Nothing but Star Wars"
)
)
)
ui <- dashboardPage(header = dashboardHeader(),
sidebar = dashboardSidebar(),
body = body
)
server <- function(input,outputt,session)
shinyApp(ui, server)
runApp('Shinydashboardtutorial_2.R')
runApp('Shinydashboardtutorial_2.R')
runApp('Shinydashboardtutorial_2.R')
runApp('Shinydashboardtutorial_2.R')
runApp('Shinydashboardtutorial_3.R')
runApp('Shinydashboardtutorial.R')
install.packages("shiny")
install.packages("shinydashboard")
runApp('Shinydashboardtutorial_4.R')
runApp('Shinydashboardtutorial.R')
install.packages("shiny")
install.packages("shinydashboard")
runApp('Shinydashboardtutorial_4.R')
install.packages("shinydashboard")
